@page "/"
@using OnlineShop.Data
@inject HttpClient Http

<PageTitle>Products</PageTitle>


<h1>Products</h1>
<div class="k-card-deck flex-center flex-wrap">
    @if (products == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {

        foreach (var product in products)
        {

            <TelerikCard ThemeColor="@ThemeConstants.Card.ThemeColor.Info" Width="350px">
                <CardHeader>
                    <CardTitle Class="title">@product.ProductName</CardTitle>
                        <CardSubTitle>Delivered on: @product.DeliveryOn.ToShortDateString()</CardSubTitle>
                    </CardHeader>
                    <CardBody>
                        <CardImage Class="img" Src="@product.ImageUrl" Height="300px" Width="100%"></CardImage>
                        <CardActions Layout="CardActionsLayout.Stretch" Orientation="CardOrientation.Horizontal">
                            <TelerikButton FillMode="@(ThemeConstants.Button.FillMode.Flat)" Class="info">Price: @product.UnitPrice lv.</TelerikButton>
                        @if (product.UnitInStock == 0)
                        {
                            <TelerikButton FillMode="@(ThemeConstants.Button.FillMode.Flat)" class="info"><i class="fa-solid fa-face-frown" style="color: red;"></i>Out of stock</TelerikButton>
                        }
                        else
                        {
                            <TelerikButton FillMode="@(ThemeConstants.Button.FillMode.Flat)" class="info"><i class="fa-solid fa-face-smile" style="color: green;"></i>@product.UnitInStock in stock</TelerikButton>
                        }
                    </CardActions>
                </CardBody>
                <CardFooter>
                   
                        @if (product.UnitInStock == 0)
                        {
                        <TelerikButton FillMode="@(ThemeConstants.Button.FillMode.Solid)" Class="my-button" Enabled="false"> <i class="fa-solid fa-cart-shopping"></i>Add to card</TelerikButton>
                        }
                        else
                        {
                        <TelerikButton FillMode="@(ThemeConstants.Button.FillMode.Solid)" Class="my-button" Enabled="true"> <i class="fa-solid fa-cart-shopping" style="color: green"></i>Add to card</TelerikButton>
                        }
                   
                </CardFooter>
            </TelerikCard>
        }
    }
</div>
<style>

    body {
        font-family: Calibri;
    }

    h1 {
        text-align: center;
        margin-bottom: 30px;
        font-family: Calibri;
        letter-spacing: 4px;
        font-weight: 600;
    }


    .flex-wrap {
        flex-wrap: wrap;
        justify-content: center;
    }

    .title {
        text-align: center;
        font-size: 20px;
    }

    .img {
        border-radius: 6px;
        margin-bottom: 15px;
    }

    .my-button {
        color: black;
        background-color: ghostwhite;
        padding:10px 20px;
        border-radius:6px;
    }
    .info{
        color:black;
        font-size:15px;
    }
    i{
        margin-right:5px;
    }
</style>
@code {
    private ICollection<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<Product[]>("sample-data/products.json");
    }

}
